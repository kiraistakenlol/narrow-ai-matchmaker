import { Injectable, Logger } from '@nestjs/common';
import { ILlmService } from './llm.interface';
import { ProfileData } from '@narrow-ai-matchmaker/common'; // Import the type

// Helper function to create a default empty ProfileData (can be shared)
const createDefaultProfileData = (): ProfileData => ({
    raw_input: 'mock input text', // Add some mock data
    personal: {
        name: 'Mock User',
        headline: 'Mock Headline',
        visiting_status: 'Looking for teammates',
    },
    skills: {
        hard: [{ skill: 'TypeScript', level: 'Intermediate' }],
        soft: [{ skill: 'Communication', level: 'Advanced' }],
    },
    industries: ['Software Development'],
    hobbies: ['Mock Hobby'],
    roles: [], // Keep roles empty for simplicity
    event_context: {
        event_id: 'mock_event',
        goals: {
            looking_for: ['Collaboration'],
            offering: ['NestJS expertise'],
        },
    },
    extra_notes: 'This is mock data generated by MockLlmService.',
});

@Injectable()
export class MockLlmService implements ILlmService {
    private readonly logger = new Logger(MockLlmService.name);

    constructor() {
        this.logger.log('MockLlmService initialized');
    }

    async generateResponse(
        userPrompt: string,
        systemPrompt?: string
    ): Promise<string> {
        this.logger.warn(
            `Mock generateResponse called. Returning fixed placeholder response. System prompt: "${systemPrompt}", User prompt length: ${userPrompt.length}`
        );

        // Check if the system prompt contains instructions for structured data extraction
        if (systemPrompt && systemPrompt.includes('RESPONSE FORMAT')) {
            // Return a mock structured response
            const mockResponse = {
                extractedData: createDefaultProfileData(),
                suggestedNewEnumValues: {
                    preferredCommunicationStyle: 'casual',
                    availability: 'mornings'
                }
            };
            
            return JSON.stringify(mockResponse);
        }
        
        // Default response for general prompts
        return `This is a mock response to: "${userPrompt.substring(0, 50)}..."`;
    }
} 