openapi: 3.0.3
info:
  title: Narrow AI Matchmaker API
  version: 0.1.0
  description: >-
    API for the Narrow AI Matchmaker platform, facilitating connections based on 
    user input like audio and text.

servers:
  - url: http://localhost:3000/api/v1 # Local development server 
    description: Local development server
  - url: https://narrow-ai-titanic-backend.fly.dev/api/v1
    description: Production server

tags:
  - name: Onboarding
    description: Operations related to the initial user onboarding flow.
  - name: Authentication
    description: Operations related to user authentication and session management.
  - name: Users
    description: Operations for managing user data and profiles.
  - name: Events
    description: Operations for managing events and participation.
  - name: Health
    description: Service health checks.
  - name: Development
    description: Development and debugging tools (not for production use).

paths:
  # --- Health check endpoint ---
  /health:
    get:
      summary: Health Check
      description: Checks if the service is running properly.
      tags:
        - Health
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time

  # --- Onboarding endpoints ---
  /onboarding/base-guidance:
    get:
      summary: Get Onboarding Guidance Schema
      description: Returns hints and guidance for the onboarding process.
      tags:
        - Onboarding
      operationId: getOnboardingGuidance
      responses:
        '200':
          description: Onboarding guidance information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingGuidanceDto'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /onboarding:
    post:
      summary: Create New Onboarding Session
      description: >-
        Starts a new onboarding session, potentially linking to an authenticated user
        or creating an unauthenticated one. Can be specific to an event or general.
      tags:
        - Onboarding
      operationId: createOnboarding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnboardingRequestDto'
      responses:
        '201':
          description: Onboarding session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingSessionDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /onboarding/{onboarding_id}:
    get:
      summary: Get Onboarding Session
      description: >-
        Retrieves an onboarding session by ID, including guidance and status.
      tags:
        - Onboarding
      operationId: getOnboardingById
      parameters:
        - $ref: '#/components/parameters/OnboardingIdPath'
      responses:
        '200':
          description: Onboarding session data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /onboarding/{onboarding_id}/audio-upload-url:
    post:
      summary: Get Audio Upload URL
      description: >-
        Requests a pre-signed URL for uploading audio for the onboarding process.
      tags:
        - Onboarding
      operationId: getAudioUploadUrl
      parameters:
        - $ref: '#/components/parameters/OnboardingIdPath'
      responses:
        '200':
          description: Upload URL generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrlResponseDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /onboarding/{onboarding_id}/notify-upload:
    post:
      summary: Notify Upload Complete
      description: >-
        Notifies the backend that an audio file has been uploaded and ready for processing.
      tags:
        - Onboarding
      operationId: notifyUploadComplete
      parameters:
        - $ref: '#/components/parameters/OnboardingIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyUploadRequestDto'
      responses:
        '200':
          description: Upload notification received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingStatusResponseDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # --- Authentication ---
  /auth:
    post:
      summary: Finalize Login
      description: >-
        Verifies ID token and completes user authentication process.
      tags:
        - Authentication
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: Authentication successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # --- Users ---
  /users/me:
    get:
      summary: Get Current User Profile
      description: Returns authenticated user information and profile.
      tags:
        - Users
      operationId: getMyProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user profile data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/me/events:
    get:
      summary: Get Current User's Joined Events
      description: Returns a list of events the user has joined.
      tags:
        - Users
      operationId: listMyJoinedEvents
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of events the user has joined.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JoinedEventDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/me/matches:
    get:
      summary: Get Current User's Matches
      description: Returns a list of matches for the user.
      tags:
        - Users
      operationId: getMyMatches
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of matches for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{id}:
    get:
      summary: Get User Profile
      description: Returns information about a specific user by ID.
      tags:
        - Users
      operationId: getUserProfile
      parameters:
        - name: id
          in: path
          required: "true"
          description: The ID of the user.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User profile data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # --- Events ---
  /events/{id}:
    get:
      summary: Get Event Details
      description: Returns information about a specific event. If the user is authenticated, includes participation details.
      tags:
        - Events
      operationId: findOneById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the event.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event details with optional participation information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinedEventDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # --- Development ---
  /dev/cleanup-database:
    post:
      summary: Clean Up Database (DEV ONLY)
      description: Development endpoint to clean up database tables. Not for production use.
      tags:
        - Development
      operationId: cleanupDatabase
      responses:
        '200':
          description: Database cleanup completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  truncatedTables:
                    type: array
                    items:
                      type: string
        '500':
          $ref: '#/components/responses/InternalServerError'

  /dev/reindex-all-profiles:
    post:
      summary: Reindex All Profiles (DEV ONLY)
      description: Development endpoint to reindex all profiles. Not for production use.
      tags:
        - Development
      operationId: reindexAllProfiles
      responses:
        '200':
          description: Reindexing completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  profilesReindexed:
                    type: integer
                  errorsEncountered:
                    type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'

  /dev/onboard-user-from-text:
    post:
      summary: Onboard User From Text (DEV ONLY)
      description: Development endpoint to create a user and profile from text input. Not for production use.
      tags:
        - Development
      operationId: onboardUserFromText
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardFromTextDto'
      responses:
        '200':
          description: Onboarding completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: string
                    format: uuid
                  profileId:
                    type: string
                    format: uuid
                  validationStatus:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    # --- Error ---
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
      required:
        - message

    # --- Onboarding ---
    OnboardingGuidanceDto:
      type: object
      properties:
        hints:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
            required:
              - field
              - message

    CreateOnboardingRequestDto:
      type: object
      properties:
        eventId:
          type: string
          format: uuid
          nullable: true
      required:
        - eventId

    OnboardingSessionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
          nullable: true
        status:
          type: string
          enum: [STARTED, PROCESSING, NEEDS_MORE_INFO, READY_FOR_REVIEW, FAILED, COMPLETED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - createdAt
        - updatedAt

    OnboardingDto:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/OnboardingSessionDto'
        guidance:
          $ref: '#/components/schemas/OnboardingGuidanceDto'
      required:
        - session
        - guidance

    PresignedUrlResponseDto:
      type: object
      properties:
        upload_url:
          type: string
          format: uri
        s3_key:
          type: string
      required:
        - upload_url
        - s3_key

    NotifyUploadRequestDto:
      type: object
      properties:
        s3_key:
          type: string
        context:
          type: string
      required:
        - s3_key
        - context

    OnboardingStatusResponseDto:
      type: object
      properties:
        status:
          type: string
          enum: [STARTED, PROCESSING, NEEDS_MORE_INFO, READY_FOR_REVIEW, FAILED, COMPLETED]
      required:
        - status

    # --- Auth ---
    LoginRequestDto:
      type: object
      properties:
        id_token:
          type: string
        state:
          type: string
          nullable: true
      required:
        - id_token

    # --- User ---
    UserDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        onboardingComplete:
          type: boolean
        profile:
          type: object
          nullable: true
          additionalProperties: true
      required:
        - id
        - email
        - onboardingComplete

    # --- Event ---
    JoinedEventDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true
        participationId:
          type: string
          format: uuid
          nullable: true
        contextData:
          type: object
          nullable: true
          additionalProperties: true
      required:
        - id
        - name
        - startTime

    # --- Match ---
    MatchDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
        reason:
          type: string
      required:
        - userId
        - name
        - reason

    # --- Development ---
    OnboardFromTextDto:
      type: object
      properties:
        text:
          type: string
      required:
        - text

  parameters:
    OnboardingIdPath:
      name: onboarding_id
      in: path
      required: "true"
      description: The ID of the onboarding session.
      schema:
        type: string
        format: uuid

  responses:
    BadRequest:
      description: The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication credentials are missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: The user does not have permission to access the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT